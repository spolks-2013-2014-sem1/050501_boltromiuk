#include <sys/types.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>
#include <netdb.h>
#include <stdio.h>
#include <arpa/inet.h>
#include <iostream>
#include <signal.h>
#include <fcntl.h>
#include <arpa/inet.h>
#include "unp.h"
using namespace std;

#define BUFSIZE 1024 
const unsigned char ACK = 1;
void error(const char *msg)
{
    cout<<"\n"<<msg<<"\n";
    exit(0);
}

void singnal_handler(int signo)
{}

int main(int argc, char *argv[])
{	
    if(argc!=2)
        error("Enter arguments: port");
    char buf[BUFSIZE];
    FILE *newfile;
    FILE *oldfile;
    char name[16];
    uint port=atoi(argv[1]);
   
     sockaddr_in server;
    bzero(&server, sizeof(server));
    server.sin_family=AF_INET;
    server.sin_addr.s_addr = INADDR_ANY;
    
    server.sin_port=htons(port);
    Inet_pton(AF_INET,"127.0.0.1",&server.sin_addr);   
    int sock = socket(AF_INET, SOCK_DGRAM, 0);


    connect   (sock, (struct sockaddr *) &server,sizeof(server));
    struct timeval tv;
    tv.tv_sec = 30;             // 30 Secs Timeout
    tv.tv_usec = 0;
    setsockopt(sock, SOL_SOCKET, SO_RCVTIMEO, (char *) &tv,  sizeof(struct timeval));
    socklen_t fromlen,serverlen;
    int dpart=0;
    recvfrom(sock, name, sizeof(name), 0,(struct sockaddr *)&server,&serverlen );
    oldfile=fopen(name,"r+");
    cout<<"123";
    if(oldfile != NULL)  
    {
        cout<<"\nFile is found";
        while (!feof(oldfile)) {
            int b=fread(buf,1,sizeof(buf),oldfile);
            dpart++;
	}
        newfile=oldfile;
    }
    else  newfile = fopen(name, "w");
    char dparts[10]; dpart--;
    sprintf(dparts,"%i",dpart);
    sendto(sock,dparts,strlen(dparts),0,(struct sockaddr *) &from,fromlen);
    cout<<"\nDownload parts:"<<dpart<<"\n";
    if (newfile == NULL) 
        error("Create file error");
    long getBytes=0;
    while (1) {
        int nbytes =recvfrom(sock, buf, sizeof(buf), 0,(struct sockaddr *)&from,&fromlen );
        if (nbytes == 0)
        {
            cout<<"\nDisconnect.Download comlete!\n";
            break;
        }
        if (nbytes < 0)
            error("Not get byte");
        fwrite(buf,nbytes,1,newfile);
    }
    fclose(newfile);
    close(sock);
    return 0;
}
